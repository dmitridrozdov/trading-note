{"version":3,"sources":["constants/actionTypes.js","reducers/index.js","reducers/agents.js","api/index.js","components/Form/styles.js","components/Form/Form.js","actions/agents.js","styles.js","components/MainTable/styles.js","components/MainTable/MainTable.js","App.js","index.js"],"names":["DELETE","UPDATE","CREATE","FETCH_ALL","combineReducers","agents","action","type","filter","agent","_id","payload","map","url","fetchAgents","searchStr","axios","get","params","search","updateAgent","id","updatedPost","patch","deleteAgent","delete","makeStyles","theme","paper","padding","spacing","backgroundColor","form","display","flexWrap","justifyContent","fileInput","width","margin","buttonSubmit","marginTop","marginBottom","fontFamily","textStyle","color","textMargin","CssTextField","withStyles","root","borderColor","TextField","Form","currentId","setCurrentId","classes","useStyles","useState","address","phone","agentData","setAgentData","useSelector","state","find","p","dispatch","useDispatch","useEffect","clear","Paper","className","autoComplete","noValidate","onSubmit","e","post","preventDefault","a","api","data","console","log","message","newPost","createAgent","Typography","variant","InputProps","name","label","fullWidth","value","onChange","target","Button","size","onClick","appBar","borderRadius","flexDirection","alignItems","heading","image","marginLeft","table","minWidth","MainTable","StyledTableCell","head","body","fontSize","TableCell","StyledTableRow","TableRow","length","Grid","container","TableContainer","component","Table","aria-label","TableHead","TableBody","scope","style","CircularProgress","App","currentSearch","setCurrentSearch","Container","maxWidth","AppBar","position","Grow","in","justify","item","xs","sm","store","createStore","reducers","compose","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.70bd2e8c.chunk.js","sourcesContent":["export const DELETE = 'DELETE'\nexport const UPDATE = 'UPDATE'\nexport const CREATE = 'CREATE'\nexport const FETCH_ALL = 'FETCH_ALL'","import { combineReducers } from 'redux'\nimport agents from './agents'\n\nexport default combineReducers({ agents })\n\n// import { combineReducers } from 'redux';\n\n// import posts from './posts';\n\n// export const reducers = combineReducers({ posts });","import { FETCH_ALL, CREATE, UPDATE, DELETE } from '../constants/actionTypes'\n\nexport default (agents = [], action) => {\n    switch (action.type) {\n        case DELETE:\n            return agents.filter((agent) => agent._id !== action.payload)\n        case UPDATE:\n            return agents.map((agent) => agent._id === action.payload._id ? action.payload : agent)\n        case FETCH_ALL:\n            return action.payload\n        case CREATE:\n            return [...agents, action.payload]\n        default:\n            return agents\n    }\n}","import axios from 'axios'\n\n// const url = 'http://localhost:5000/agents'\nconst url = 'https://trawin.herokuapp.com/agents'\n\nexport const fetchAgents = (searchStr) => axios.get(url, { params: { search: searchStr }})\nexport const createAgent = (newPost) => axios.post(url, newPost)\nexport const updateAgent = (id, updatedPost) => axios.patch(`${url}/${id}`, updatedPost)\nexport const deleteAgent = (id) => axios.delete(`${url}/${id}`)","import { makeStyles, withStyles } from '@material-ui/core/styles';\nimport { TextField } from '@material-ui/core'\n\nexport default makeStyles((theme) => ({\n\n  paper: {\n    padding: theme.spacing(2),\n    backgroundColor: 'rgba(0,0,0,0.2)'\n    // boxShadow: 'none',\n  },\n  form: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'center',\n  },\n  fileInput: {\n    width: '97%',\n    margin: '10px 0',\n  },\n  buttonSubmit: {\n    marginTop: 20,\n    marginBottom: 10,\n    fontFamily: 'Montserrat',\n  },\n  textStyle: {\n    color: 'white', \n    fontFamily: 'Montserrat',\n  },\n  textMargin: {\n    marginTop: 10,\n  },\n}));\n\n\nexport const CssTextField = withStyles({\n  root: {\n    '& label': {\n      color: 'white',\n    },\n    '&.Mui-focused': {\n      color: 'white'\n    },\n    '& label.Mui-focused': {\n      color: 'white',\n    },\n    // '& .MuiInput-underline:after': {\n    //   borderBottomColor: 'white',\n    // },\n    // '& .MuiInput-underline:before': {\n    //   borderBottomColor: 'white',\n    // },\n    // '& .MuiInput-underline:hover::before': {\n    //   borderBottomColor: 'white',\n    // },\n    '& .MuiOutlinedInput-root': {\n      '& fieldset': {\n        borderColor: 'white',\n      },\n      '&:hover fieldset': {\n        borderColor: 'white',\n      },\n      '&.Mui-focused fieldset': {\n        borderColor: 'white',\n      },\n    },\n  },\n})(TextField);","import React, { useState, useEffect } from 'react'\nimport useStyles, { CssTextField } from './styles'\n// import FileBase from 'react-file-base64'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport { Button, Typography, Paper } from '@material-ui/core'\nimport { createAgent, updateAgent } from '../../actions/agents'\n\n\nconst Form = ({ currentId, setCurrentId }) => {\n    const classes = useStyles()\n    const [agentData, setAgentData] = useState({\n        agent: '', address: '', phone: ''\n    })\n    const agent  = useSelector((state) => currentId ? state.agents.find((p) => p._id === currentId) : null)\n    const dispatch = useDispatch()\n    \n    useEffect(() => {\n        if(agent) setAgentData(agent)\n    }, [agent])\n\n    const handleSubmit = (e) => {\n        e.preventDefault()\n        if(currentId) {\n            dispatch(updateAgent(currentId, agentData))\n        } else {\n            dispatch(createAgent(agentData))\n        }\n        clear()\n    }\n\n    const clear = () => {\n        setCurrentId(null)\n        setAgentData({agent: '', address: '', phone: ''})\n    }\n    \n    return(\n        <Paper className={classes.paper}>\n            <form autoComplete='off' noValidate className={`${classes.root} ${classes.form}`} onSubmit={handleSubmit}>\n                <Typography variant='h6' className={classes.textStyle}>Add record</Typography>\n                <CssTextField \n                    className={classes.textMargin}\n                    InputProps={{\n                        className: classes.textStyle\n                    }}\n                    variant=\"outlined\"\n                    name='agent' label='Agent' fullWidth\n                    value={agentData.agent} onChange={(e) => setAgentData({ ...agentData, agent: e.target.value })}/>\n                \n                <CssTextField \n                    className={classes.textMargin}\n                    InputProps={{\n                        className: classes.textStyle\n                    }}\n                    variant=\"outlined\"\n                    name='address' label='Address' fullWidth value={agentData.address} \n                    onChange={(e) => setAgentData({ ...agentData, address: e.target.value })}/>\n\n                <CssTextField \n                    className={classes.textMargin}\n                    InputProps={{\n                        className: classes.textStyle\n                    }}\n                    variant=\"outlined\"\n                    name='phone' label='Phone' fullWidth value={agentData.phone} \n                    onChange={(e) => setAgentData({ ...agentData, phone: e.target.value })}/>\n                    \n                <Button className={classes.buttonSubmit} variant='contained' color='primary' size='large' type='submit' fullWidth >Submit</Button>\n                <Button className={classes.textStyle} variant='contained' color='secondary' size='small' onClick={clear} fullWidth >Clear</Button>\n            </form>\n        </Paper>\n    )\n}\n\nexport default Form","import { FETCH_ALL, CREATE, UPDATE, DELETE } from '../constants/actionTypes'\nimport * as api from '../api'\n\n// Action Creator\nexport const getAgents = (searchStr) => async(dispatch) => {\n    try {\n        const { data } = await api.fetchAgents(searchStr)\n        dispatch({ type: FETCH_ALL, payload: data })\n    } catch(error) {\n        console.log(error.message)\n    }   \n}\n\nexport const createAgent = (post) => async(dispatch) => {\n    try {\n        const { data } = await api.createAgent(post)\n        dispatch({ type: CREATE, payload: data })\n    } catch(error) {\n        console.log(error.message)\n    }   \n}\n\nexport const updateAgent = (id, post) => async(dispatch) => {\n    try {\n        const { data } = await api.updateAgent(id, post)\n        console.log(post)\n        dispatch({ type: UPDATE, payload: data })\n    } catch(error) {\n        console.log(error.message)\n    }   \n}\n\nexport const deleteAgent = (id) => async(dispatch) => {\n    try {\n        await api.deleteAgent(id)\n        dispatch({ type: DELETE, payload: id })\n    } catch(error) {\n        console.log(error)\n    }\n}","import { makeStyles, withStyles } from '@material-ui/core/styles';\nimport { TextField } from '@material-ui/core'\n\nexport default makeStyles(() => ({\n  appBar: {\n    borderRadius: 5,\n    margin: '30px 0',\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  heading: {\n    color: 'rgba(0,183,255, 1)',\n  },\n  image: {\n    marginLeft: '15px',\n  },\n  textStyle: {\n    color: 'white', \n    fontFamily: 'Montserrat',\n  },\n  textMargin: {\n    marginTop: 10,\n  },\n}));\n\nexport const CssTextField = withStyles({\n  root: {\n    '& label': {\n      color: 'white',\n    },\n    '&.Mui-focused': {\n      color: 'white'\n    },\n    '& label.Mui-focused': {\n      color: 'white',\n    },\n    '& .MuiOutlinedInput-root': {\n      '& fieldset': {\n        borderColor: 'white',\n      },\n      '&:hover fieldset': {\n        borderColor: 'white',\n      },\n      '&.Mui-focused fieldset': {\n        borderColor: 'white',\n      },\n    },\n  },\n})(TextField);","import { makeStyles } from '@material-ui/core/styles';\n\nexport default makeStyles((theme) => ({\n\n  paper: {\n    padding: theme.spacing(2),\n    backgroundColor: 'rgba(0,0,0,0.05)'\n    // boxShadow: 'none',\n  },\n  table: {\n    minWidth: 650,\n    backgroundColor: 'rgba(0,0,0,0.05)'\n  },\n}));","import React from 'react'\nimport useStyles from './styles'\nimport { Grid, CircularProgress } from '@material-ui/core'\nimport { useSelector } from 'react-redux'\nimport { Button, Paper, Table, TableContainer, TableHead, TableRow, TableCell, TableBody } from '@material-ui/core'\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz'\nimport DeleteIcon from '@material-ui/icons/Delete'\nimport { useDispatch } from 'react-redux'\nimport { deleteAgent } from '../../actions/agents'\n\nimport { withStyles } from '@material-ui/core/styles';\n\nconst MainTable = ({ setCurrentId }) => {\n    const agents  = useSelector((state) => state.agents)\n    const classes = useStyles()\n    const dispatch = useDispatch()\n\n    const StyledTableCell = withStyles((theme) => ({\n        head: {\n          backgroundColor: 'rgb(72, 106, 176)',\n          color: 'white',\n          fontFamily: 'Montserrat',\n        },\n        body: {\n          fontSize: 14,\n          fontFamily: 'Montserrat',\n        },\n      }))(TableCell);\n      \n      const StyledTableRow = withStyles((theme) => ({\n        root: {\n          '&:nth-of-type(odd)': {\n            backgroundColor: 'rgb(255, 255, 255)',\n          },\n          '&:nth-of-type(even)': {\n            backgroundColor: 'rgb(166, 212, 214)',\n          },\n        },\n      }))(TableRow);\n\n    return(\n        !agents.length ? <CircularProgress /> : (\n            <Grid container alignItems='stretch' spacing={3}>\n                <TableContainer component={Paper}>\n                    <Table className={classes.table} aria-label=\"simple table\">\n                        <TableHead>\n                        <TableRow>\n                            <StyledTableCell>Agent</StyledTableCell>\n                            <StyledTableCell>Address</StyledTableCell>\n                            <StyledTableCell>Phone</StyledTableCell>\n                            <StyledTableCell>Edit/Delete</StyledTableCell>\n                        </TableRow>\n                        </TableHead>\n                        <TableBody>\n                        {agents.map((agent) => (\n                            <StyledTableRow key={agent.agent}>\n                              <StyledTableCell component=\"th\" scope=\"row\">\n                                  {agent.agent}\n                              </StyledTableCell>\n                              <StyledTableCell>{agent.address}</StyledTableCell>\n                              <StyledTableCell>{agent.phone}</StyledTableCell>\n                              <StyledTableCell>\n                                  <Button style={{color: 'white'}} size='small' onClick={() => {setCurrentId(agent._id)}}>\n                                    <MoreHorizIcon fontSize='default' />\n                                  </Button>\n                                  <Button style={{color: 'white'}} size='small' onClick={() => dispatch(deleteAgent(agent._id))}>\n                                    <DeleteIcon fontSize='default' />\n                                  </Button>\n                              </StyledTableCell>\n                            </StyledTableRow>\n                        ))}\n                        </TableBody>\n                    </Table>\n                </TableContainer>              \n            </Grid>\n        )\n    )\n}\n\nexport default MainTable","import React, { useEffect, useState } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { Container, AppBar, /*Typography,*/ Grow, Grid } from '@material-ui/core'\n// import memories from './images/memories.png'\n\nimport { getAgents } from './actions/agents'\nimport Form from './components/Form/Form'\nimport useStyles, { CssTextField }  from './styles'\nimport MainTable from './components/MainTable/MainTable'\n\nconst App = () => {\n    const [currentId, setCurrentId] = useState(null)\n    const [currentSearch, setCurrentSearch] = useState('')\n    const classes = useStyles()\n    const dispatch = useDispatch()\n\n    useEffect(() => {\n        dispatch(getAgents(currentSearch))\n    }, [dispatch, currentSearch])\n\n    return (\n        <Container maxWidth='lg'>\n            <AppBar className = {classes.appBar} position='static' color='inherit'>\n                {/* <Typography className = {classes.heading} variant='h2' align='center'>Trawin</Typography> */}\n            </AppBar>\n\n            <Grow in>\n                <Container>\n                    <Grid container justify='space-between' alignItems='stretch' spacing={4}>\n                            <Grid item xs={12} sm={8}>\n                                <CssTextField \n                                        className={classes.textMargin}\n                                        InputProps={{\n                                            className: classes.textStyle\n                                        }}\n                                        variant=\"outlined\"\n                                        name='search' label='Search' fullWidth \n                                        value={currentSearch} \n                                        onChange={(e) => setCurrentSearch(e.target.value)}\n                                        />\n                            </Grid>\n                    </Grid>\n                </Container>\n            </Grow>\n            \n            <Grow in>\n                <Container>\n                    <Grid container justify='space-between' spacing={4}>\n                        <Grid item xs={12} sm={8}>\n                            <MainTable setCurrentId={setCurrentId}/>\n                        </Grid>\n                        <Grid item xs={12} sm={4}>\n                            <Form currentId={currentId} setCurrentId={setCurrentId}/>\n                        </Grid>\n                    </Grid>\n                </Container>\n            </Grow>\n        </Container>\n    )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport { createStore, applyMiddleware, compose } from 'redux'\nimport thunk from 'redux-thunk'\nimport reducers from './reducers'\nimport App from './App';\nimport './index.css'\n\nconst store = createStore(reducers, compose(applyMiddleware(thunk)))\n\nReactDOM.render(\n    <Provider store={store}>\n       <App />, \n    </Provider>,\n    document.getElementById('root')\n);"],"sourceRoot":""}